/* ESQUEMA */
USE GD2C2016;
GO

CREATE SCHEMA FLOPANICMA AUTHORIZATION GD;
GO

/**************/
/* SECUENCIAS */
/**************/

CREATE SEQUENCE FLOPANICMA.AFILIADO_SEQ START WITH 100 INCREMENT BY 100;
CREATE SEQUENCE FLOPANICMA.MATRICULA_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE FLOPANICMA.PERSONA_SEQ AS INT START WITH 1 INCREMENT BY 1;


/**********/
/* TABLAS */
/**********/

CREATE TABLE FLOPANICMA.PERSONA
(
		ID_PERSONA INT NOT NULL PRIMARY KEY,
		NOMBRE VARCHAR(255) NULL,
		APELLIDO VARCHAR(255) NULL,
		DIRECCION VARCHAR(255) NULL,
		TELEFONO NUMERIC(18,0) NULL,
		E_MAIL VARCHAR(255) NOT NULL DEFAULT 'SIN E-MAIL',
		F_NACIMIENTO DATETIME NULL,
		TIPO_DOCUMENTO VARCHAR(20) NOT NULL DEFAULT 'DNI',
		NRO_DOCUMENTO NUMERIC(18,0) NULL,
		SEXO VARCHAR(1) NULL,
);

CREATE TABLE FLOPANICMA.PROFESIONAL
(
		ID_PROFESIONAL INT NOT NULL PRIMARY KEY,
		MATRICULA INT NOT NULL,
		HORAS_ACUMULADAS INT NOT NULL DEFAULT 0,
		
		CONSTRAINT FK_PROFESIONAL_PERSONA FOREIGN KEY (ID_PROFESIONAL) REFERENCES FLOPANICMA.PERSONA(ID_PERSONA)
);

CREATE TABLE FLOPANICMA.AGENDA
(		
		ID_PROFESIONAL INT NOT NULL PRIMARY KEY,
		PERIODO_INICIO DATE NOT NULL,
		PERIODO_FIN DATE NOT NULL,
		
		CONSTRAINT FK_AGENDA_PROFESIONAL FOREIGN KEY (ID_PROFESIONAL) REFERENCES FLOPANICMA.PROFESIONAL(ID_PROFESIONAL)
);

CREATE TABLE FLOPANICMA.TIPO_ESPECIALIDAD
(
		ID_TIPO_ESPECIALIDAD NUMERIC(18,0) NOT NULL PRIMARY KEY,
		DETALLE VARCHAR(255) NULL
);

CREATE TABLE FLOPANICMA.ESPECIALIDAD
(
		ID_ESPECIALIDAD NUMERIC(18,0) NOT NULL PRIMARY KEY,
		ID_TIPO_ESPECIALIDAD NUMERIC(18,0) NOT NULL,
		DETALLE VARCHAR(255) NULL,
		
		CONSTRAINT FK_ESPECIALIDAD_TIPO_ESPECIALIDAD FOREIGN KEY (ID_TIPO_ESPECIALIDAD) REFERENCES FLOPANICMA.TIPO_ESPECIALIDAD(ID_TIPO_ESPECIALIDAD)
);

CREATE TABLE FLOPANICMA.ACTIVIDAD_DIA
(
		ID_PROFESIONAL INT NOT NULL,
		DIA VARCHAR(10) NOT NULL, 
		HORA_TURNO TIME(0) NOT NULL,
		ID_ESPECIALIDAD NUMERIC (18,0) NOT NULL,
		
		CONSTRAINT PK_ACTIVIDAD_DIA PRIMARY KEY(ID_PROFESIONAL,DIA,HORA_TURNO),
		CONSTRAINT FK_ACTIVIDAD_DIA_AGENDA FOREIGN KEY (ID_PROFESIONAL) REFERENCES FLOPANICMA.AGENDA(ID_PROFESIONAL),
		CONSTRAINT FK_ACTIVIDAD_DIA_ESPECIALIDAD FOREIGN KEY (ID_ESPECIALIDAD) REFERENCES FLOPANICMA.ESPECIALIDAD(ID_ESPECIALIDAD)
);

CREATE TABLE FLOPANICMA.PLAN_MEDICO
(
		ID_PLAN NUMERIC(18,0) NOT NULL PRIMARY KEY,
		DESCRIPCION VARCHAR(255)NULL,
		CUOTA NUMERIC(18,0) NULL,
		COSTO_CONSULTA NUMERIC(18,0) NULL,
		COSTO_FARMACIA NUMERIC(18,0) NULL
);

CREATE TABLE FLOPANICMA.AFILIADO
(
		ID_AFILIADO INT NOT NULL PRIMARY KEY,
		NRO_AFILIADO INT NOT NULL,
		PLAN_MEDICO NUMERIC(18,0) NOT NULL,
		ACTIVO BIT NOT NULL DEFAULT 1,
		ESTADO_CIVIL VARCHAR(50) NOT NULL DEFAULT 'SOLTERO/A',
		CANTIDAD_HIJOS INT NOT NULL DEFAULT 0,
		NRO_CONSULTA INT NOT NULL DEFAULT 0, 
		
		CONSTRAINT FK_AFILIADO_PLAN_MEDICO FOREIGN KEY (PLAN_MEDICO) REFERENCES FLOPANICMA.PLAN_MEDICO(ID_PLAN),
		CONSTRAINT FK_AFILIADO_PERSONA FOREIGN KEY (ID_AFILIADO) REFERENCES FLOPANICMA.PERSONA(ID_PERSONA)
);

CREATE TABLE FLOPANICMA.COMPRA_BONO
(
		ID_OPERACION INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
		ID_AFILIADO INT NOT NULL,
		CANTIDAD_BONOS INT DEFAULT 1,
		FECHA_COMPRA DATETIME NOT NULL,
		FECHA_IMPRESION DATETIME NOT NULL,
		
		CONSTRAINT FK_COMPRA_BONO_AFILIADO FOREIGN KEY(ID_AFILIADO) REFERENCES FLOPANICMA.AFILIADO(ID_AFILIADO)
);

CREATE TABLE FLOPANICMA.BONO
(
		ID_OPERACION INT NOT NULL,
		ID_AFILIADO INT NOT NULL,
		PLAN_MEDICO NUMERIC(18,0) NOT NULL,
		NUMERO_AFILIADO INT NOT NULL,
		BONO_NRO INT NULL
		
		CONSTRAINT FK_BONO_COMRA_BONO FOREIGN KEY (ID_OPERACION) REFERENCES FLOPANICMA.COMPRA_BONO(ID_OPERACION),
		CONSTRAINT FK_BONOS_PLAN_MEDICO FOREIGN KEY (PLAN_MEDICO) REFERENCES FLOPANICMA.PLAN_MEDICO(ID_PLAN),
		CONSTRAINT FK_BONOS_AFILIADO FOREIGN KEY (ID_AFILIADO) REFERENCES FLOPANICMA.AFILIADO(ID_AFILIADO)
);

CREATE TABLE FLOPANICMA.MODIFICACION
(
		ID_MODIFICACION INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
		ID_AFILIADO INT NOT NULL,
		FECHA DATE NOT NULL,
		DETALLE VARCHAR(255) NOT NULL,
		PLAN_MEDICO_ANTERIOR NUMERIC(18,0) NOT NULL,
		
		CONSTRAINT FK_MODIFICACIONES_AFILIADO FOREIGN KEY (ID_AFILIADO) REFERENCES FLOPANICMA.AFILIADO(ID_AFILIADO),
		CONSTRAINT FK_MODIFICACIONES_PLAN_MEDICO FOREIGN KEY (PLAN_MEDICO_ANTERIOR) REFERENCES FLOPANICMA.PLAN_MEDICO(ID_PLAN)
);

CREATE TABLE FLOPANICMA.ESPECIALIDAD_PROFESIONAL
(
		ID_PROFESIONAL INT NOT NULL,
		ID_ESPECIALIDAD NUMERIC(18,0) NOT NULL,
		
		CONSTRAINT PK_ESPECIALIDAD_PROFESIONAL PRIMARY KEY (ID_PROFESIONAL,ID_ESPECIALIDAD),
		CONSTRAINT FK_ESPECIALIDAD_PROFESIONAL_ESPECIALIDAD FOREIGN KEY (ID_ESPECIALIDAD) REFERENCES FLOPANICMA.ESPECIALIDAD(ID_ESPECIALIDAD),
		CONSTRAINT FK_ESPECIALIDAD_PROFESIONAL_PROFESIONAL FOREIGN KEY (ID_PROFESIONAL) REFERENCES FLOPANICMA.PROFESIONAL(ID_PROFESIONAL)
);

CREATE TABLE FLOPANICMA.PEDIDO_TURNO
(
		ID_PEDIDO NUMERIC(18,0) NOT NULL PRIMARY KEY,
		FECHA DATETIME NOT NULL,
		ID_PROFESIONAL INT NOT NULL,
		ID_AFILIADO INT NOT NULL,
		ID_ESPECIALIDAD NUMERIC(18,0) NOT NULL,
		
		
		--FALTA CONSTRAINT PARA EVITAR PEDIDOS A MAS DE UN DOCTOR Y DE UN DOCTOR A VARIOS PACIENTES
		CONSTRAINT FK_PEDIDO_TURNO_ESPECIALIDADA FOREIGN KEY (ID_ESPECIALIDAD) REFERENCES FLOPANICMA.ESPECIALIDAD(ID_ESPECIALIDAD),
		CONSTRAINT FK_PEDIDO_TURNO_PROFESIONAL FOREIGN KEY (ID_PROFESIONAL) REFERENCES FLOPANICMA.PROFESIONAL(ID_PROFESIONAL),
		CONSTRAINT FK_PEDIDO_TURNO_AFILIADO FOREIGN KEY (ID_AFILIADO) REFERENCES FLOPANICMA.AFILIADO(ID_AFILIADO),
);

CREATE TABLE FLOPANICMA.TIPO_CANCELACION
(
		ID_TIPO_CANCELACION INT IDENTITY (1,1) NOT NULL PRIMARY KEY,
		DETALLE VARCHAR(255) NULL
);

CREATE TABLE FLOPANICMA.CANCELACION
(
		ID_TURNO_CANCELADO NUMERIC(18,0) NOT NULL PRIMARY KEY,
		COD_TIPO_CANCELACION INT NOT NULL,
		
		CONSTRAINT FK_CANCELACION_PEDIDO_TURNO FOREIGN KEY (ID_TURNO_CANCELADO) REFERENCES FLOPANICMA.PEDIDO_TURNO(ID_PEDIDO),
		CONSTRAINT FK_CANCELACION_TIPO_CANCELACION FOREIGN KEY (COD_TIPO_CANCELACION) REFERENCES FLOPANICMA.TIPO_CANCELACION(ID_TIPO_CANCELACION)
);

CREATE TABLE FLOPANICMA.CONSULTA
(
		ID_CONSULTA INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
		ID_PROFESIONAL INT NOT NULL,
		ID_AFILIADO INT NOT NULL,
		ID_ESPECIALIDAD NUMERIC(18,0) NOT NULL,
		FECHA DATETIME NOT NULL,
		SINTOMA VARCHAR(255) NOT NULL,
		DIAGNOSTICO VARCHAR(255) NOT NULL,
		
		CONSTRAINT FK_CONSULTA_ESPECIALIDAD FOREIGN KEY (ID_ESPECIALIDAD) REFERENCES FLOPANICMA.ESPECIALIDAD(ID_ESPECIALIDAD),
		CONSTRAINT FK_CONSULTAS_AFILIADO FOREIGN KEY (ID_AFILIADO) REFERENCES FLOPANICMA.AFILIADO(ID_AFILIADO),
		CONSTRAINT FK_CONSULTAS_PROFESIONAL FOREIGN KEY (ID_PROFESIONAL) REFERENCES FLOPANICMA.PROFESIONAL(ID_PROFESIONAL)
);

CREATE TABLE FLOPANICMA.FUNCIONALIDAD
(
		ID_FUNCIONALIDAD INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
		DESCRIPCION VARCHAR(255),
);


CREATE TABLE FLOPANICMA.ROL
(
		ID_ROL INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
		DESCRIPCION VARCHAR(255) NULL,
		ACTIVO BIT NOT NULL
);

CREATE TABLE FLOPANICMA.USUARIO
(
		ID_USUARIO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
		ID_PERSONA INT NOT NULL,
		USERNAME VARCHAR(255) NOT NULL,
		PASSWORD NVARCHAR(255) NOT NULL,
		INTENTOS INT NOT NULL DEFAULT 0,
		ACTIVO BIT NOT NULL DEFAULT 1,
		
		CONSTRAINT FK_USUARIO_PERSONA FOREIGN KEY(ID_PERSONA) REFERENCES FLOPANICMA.PERSONA(ID_PERSONA)
);

CREATE TABLE FLOPANICMA.USUARIO_ROL
(
		ID_USUARIO INT NOT NULL,
		ID_ROL INT NOT NULL,
		
		CONSTRAINT PK_USUARIO_ROL PRIMARY KEY (ID_USUARIO,ID_ROL),
		CONSTRAINT FK_USUARIO_ROL_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES FLOPANICMA.USUARIO(ID_USUARIO),
		CONSTRAINT FK_USUARIO_ROL_ROL FOREIGN KEY (ID_ROL) REFERENCES FLOPANICMA.ROL(ID_ROL)
);

CREATE TABLE FLOPANICMA.ROL_FUNCIONALIDAD
(
		ID_ROL INT NOT NULL,
		ID_FUNCIONALIDAD INT NOT NULL,
		
		CONSTRAINT PK_ROL_FUNCIONALIDAD PRIMARY KEY (ID_ROL,ID_FUNCIONALIDAD),
		CONSTRAINT FK_ROL_FUNCIONALIDAD_ROL FOREIGN KEY (ID_ROL) REFERENCES FLOPANICMA.ROL(ID_ROL),
		CONSTRAINT FK_ROL_FUNCIONALIDAD_FUNCIONALIDAD FOREIGN KEY (ID_FUNCIONALIDAD) REFERENCES FLOPANICMA.FUNCIONALIDAD(ID_FUNCIONALIDAD)
);


/***********/
/* INDICES */
/***********/
CREATE UNIQUE INDEX NRO_DOCUMENTO_IND1 ON FLOPANICMA.PERSONA(NRO_DOCUMENTO);
CREATE UNIQUE INDEX USUARIO_IND1 ON FLOPANICMA.USUARIO(USERNAME);


/***********************/
/*      FUNCIONES      */
/***********************/
GO

CREATE FUNCTION FLOPANICMA.PASSWORD_HASH(@PASSWORD NVARCHAR(255))
	RETURNS NVARCHAR(255)
	
	BEGIN
		RETURN HASHBYTES('SHA2_256',@PASSWORD)
	END;

GO

CREATE FUNCTION FLOPANICMA.TRIM(@string VARCHAR(255))
	RETURNS VARCHAR(255)

	BEGIN
		RETURN LTRIM(RTRIM(@string))
	END

	

/************/
/* MIGRADOR */
/************/
GO

/*INSERTAR DATOS FIJOS*/
CREATE PROCEDURE FLOPANICMA.Z_MIGRACION_INSERT_DATOS_FIJOS
AS
BEGIN
	
	/*FLOPANICMA ACTIVIDAD_DIA*/
	--INSERT INTO FLOPANICMA.ACTIVIDAD_DIA(ID_PROFESIONAL,DIA,HORA_INICIO) TERMINRA!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	/*FALTA TODAVIA CARGAR TABLA ACTIVIDAD-DIA ENCONTRE MAS INCONSISTENCIAS DESDE LA TABLA MAESTRA, CALCULO QUE HUBO ALGUN 
CAMBIO EN LAS ACTIVIDADES DE ALGUNOS PROFESIONALES EN EL TRANSCURSO DEL AÃ‘O AUNQUE TODAVIA NO SE ME OCURRE COMO 
DEFINIR QUE ACTIVIDAD QUEDA Y CUAL NO*/
	
	/*FLOPANICMA.ROL*/
	INSERT INTO FLOPANICMA.ROL(DESCRIPCION,ACTIVO)
	VALUES
	('ADMINISTRATIVO',1),
	('PROFESIONAL',1),
	('AFILIADO',1),
	('ADMINISTRADOR GENERAL',1);
	
	/*FLOPANICMA.FUNCIONALIDAD*/
	INSERT INTO FLOPANICMA.FUNCIONALIDAD(DESCRIPCION)
	VALUES
	('ABM DE AFILIADO'),
	('ABM DE ESPECIALIDADES MEDICAS'),
	('ABM DE PLANES MEDICOS'),
	('ABM DE PROFESIONAL'),
	('ABM DE ROL'),
	('CANCELAR ATENCION'),
	('COMPRA DE BONOS'),
	('LISTADOS'),
	('PEDIR TURNO'),
	('REGISTRAR AGENDA PROFESIONAL'),
	('REGISTRAR LLEGADA'),
	('REGISTRAR RESULTADO');
	
	/*FLOPLANICMA.ROL_FUNCIONALIDAD*/
	DECLARE @ID_ROL INT;
	DECLARE @ID_USUARIO INT;
	
	/*FUNCIONALIDADES DEL ROL ADMINISTRATIVO*/
	SELECT @ID_ROL = ID_ROL FROM FLOPANICMA.ROL WHERE DESCRIPCION='ADMINISTRATIVO';
	INSERT INTO FLOPANICMA.ROL_FUNCIONALIDAD (ID_ROL,ID_FUNCIONALIDAD)
	VALUES
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION = 'ABM DE AFILIADO')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION = 'ABM DE ESPECIALIDADES MEDICAS')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='ABM DE PLANES MEDICOS')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='ABM DE PROFESIONAL')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='ABM DE ROL')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='REGISTRAR LLEGADA'));
	
	/*FUNCIONALIDADES DEL ROL AFILIADO*/
	SELECT @ID_ROL = ID_ROL FROM FLOPANICMA.ROL WHERE DESCRIPCION='AFILIADO';
	INSERT INTO FLOPANICMA.ROL_FUNCIONALIDAD (ID_ROL,ID_FUNCIONALIDAD)
	VALUES
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='CANCELAR ATENCION')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='COMPRA DE BONOS')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='PEDIR TURNO'));
	
	/*FUNCIONALIDADES DEL ROL PROFESIONAL*/
	SELECT @ID_ROL = ID_ROL FROM FLOPANICMA.ROL WHERE DESCRIPCION='PROFESIONAL';
	INSERT INTO FLOPANICMA.ROL_FUNCIONALIDAD (ID_ROL,ID_FUNCIONALIDAD)
	VALUES
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='REGISTRAR AGENDA PROFESIONAL')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='CANCELAR ATENCION')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='REGISTRAR RESULTADO'));
	
	/*FUNCIONALIDADES DEL ROL ADMINISTRADOR GENERAL*/
	SELECT @ID_ROL = ID_ROL FROM FLOPANICMA.ROL WHERE DESCRIPCION='ADMINISTRADOR GENERAL';
	INSERT INTO FLOPANICMA.ROL_FUNCIONALIDAD(ID_ROL,ID_FUNCIONALIDAD)
	VALUES
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION = 'ABM DE AFILIADO')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION = 'ABM DE ESPECIALIDADES MEDICAS')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='ABM DE PLANES MEDICOS')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='ABM DE PROFESIONAL')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='ABM DE ROL')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='REGISTRAR LLEGADA')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='CANCELAR ATENCION')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='COMPRA DE BONOS')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='PEDIR TURNO')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='REGISTRAR AGENDA PROFESIONAL')),
	(@ID_ROL,(SELECT ID_FUNCIONALIDAD FROM FLOPANICMA.FUNCIONALIDAD WHERE DESCRIPCION ='REGISTRAR RESULTADO'));
	
	/*FLOPANICMA.TIPO_CANCELACION*/
	INSERT INTO FLOPANICMA.TIPO_CANCELACION(DETALLE)
	VALUES
	('CANCELACION DEL PACIENTE'),
	('CANCELACION DEL PROFESIONAL UN PERIODO'),
	('CANCELACION DEL PROFESIONAL DIA ENTERO');	
	
	/*USUARIOS ADMINISTRATIVOS (FUNCIONALIDADES CORRESPONDIENTRES PARA ROL ADMINISTRATIVO*/
	INSERT INTO FLOPANICMA.PERSONA (ID_PERSONA,NOMBRE,NRO_DOCUMENTO)
	VALUES (NEXT VALUE FOR FLOPANICMA.PERSONA_SEQ,'ADMINISTRATIVO 1',32947431);
	
	INSERT INTO FLOPANICMA.USUARIO (ID_PERSONA,USERNAME,PASSWORD)
	VALUES ((SELECT ID_PERSONA FROM FLOPANICMA.PERSONA WHERE NOMBRE='ADMINISTRATIVO 1'),'NICO',FLOPANICMA.PASSWORD_HASH('ASDF'));
	
	SELECT @ID_USUARIO = ID_USUARIO
	FROM FLOPANICMA.USUARIO
	WHERE USERNAME='NICO'
	
	INSERT INTO USUARIO_ROL
	VALUES (@ID_USUARIO,1)
	
	/*USUARIO ADMINISTRADOR (TODAS LAS FUNCIONALIDADES)*/
		
	INSERT INTO FLOPANICMA.PERSONA (ID_PERSONA,NOMBRE)
	VALUES (0,'ADMINISTRADOR GENERAL');
	
	INSERT INTO FLOPANICMA.USUARIO (ID_PERSONA,USERNAME,PASSWORD)
	VALUES (0,'ADMIN',FLOPANICMA.PASSWORD_HASH('w23e'));
	
	SELECT @ID_USUARIO=ID_USUARIO
	FROM FLOPANICMA.USUARIO 
	WHERE USERNAME = 'ADMIN';
		
	INSERT INTO USUARIO_ROL
	VALUES (@ID_USUARIO,@ID_ROL);

END;

GO

EXEC FLOPANICMA.Z_MIGRACION_INSERT_DATOS_FIJOS;

GO

/*MIGRAR AFILIADOS Y PLANES MEDICOS*/

CREATE PROCEDURE FLOPANICMA.Z_MIGRACION_AFILIADOS
AS
BEGIN
	DECLARE @MIGRA_AFILIADO_PLAN_MEDICO TABLE
	(
		NRO_DOCUMENTO NUMERIC(18,0) NULL,
		NOMBRE VARCHAR(255) NULL,
		APELLIDO VARCHAR(255) NULL,
		DIRECCION VARCHAR(255) NULL,
		TELEFONO NUMERIC(18,0) NULL,
		E_MAIL VARCHAR(255) NOT NULL DEFAULT 'SIN E-MAIL',
		F_NACIMIENTO DATETIME NULL,
		TIPO_DOCUMENTO VARCHAR(20) NOT NULL DEFAULT 'DNI',
		ID_PLAN NUMERIC(18,0) NULL,
		DESCRIPCION VARCHAR (255) NULL,
		CUOTA NUMERIC(4,2) NULL,
		COSTO_CONSULTA NUMERIC(18,0) NULL,
		COSTO_FARMACIA NUMERIC(18,0) NULL
	);
		
	INSERT INTO @MIGRA_AFILIADO_PLAN_MEDICO
	(NRO_DOCUMENTO,NOMBRE,APELLIDO,DIRECCION,TELEFONO,E_MAIL,F_NACIMIENTO,ID_PLAN,DESCRIPCION,COSTO_CONSULTA,COSTO_FARMACIA)
	SELECT DISTINCT (PACIENTE_DNI),PACIENTE_NOMBRE,PACIENTE_APELLIDO,PACIENTE_DIRECCION,PACIENTE_TELEFONO,PACIENTE_MAIL,
			PACIENTE_FECHA_NAC,PLAN_MED_CODIGO,PLAN_MED_DESCRIPCION,PLAN_MED_PRECIO_BONO_CONSULTA,PLAN_MED_PRECIO_BONO_FARMACIA
	FROM GD_ESQUEMA.MAESTRA
	WHERE PACIENTE_DNI IS NOT NULL;
	
	INSERT INTO FLOPANICMA.PLAN_MEDICO
	(ID_PLAN,DESCRIPCION,COSTO_CONSULTA,COSTO_FARMACIA)
	SELECT DISTINCT (ID_PLAN),DESCRIPCION,COSTO_CONSULTA,COSTO_FARMACIA
	FROM @MIGRA_AFILIADO_PLAN_MEDICO;
	
	INSERT INTO FLOPANICMA.PERSONA
	(ID_PERSONA,NOMBRE,APELLIDO,DIRECCION,TELEFONO,E_MAIL,F_NACIMIENTO,NRO_DOCUMENTO)
	SELECT NEXT VALUE FOR FLOPANICMA.PERSONA_SEQ,NOMBRE,APELLIDO,DIRECCION,TELEFONO,E_MAIL,F_NACIMIENTO,NRO_DOCUMENTO 
	FROM @MIGRA_AFILIADO_PLAN_MEDICO;
	
	INSERT INTO FLOPANICMA.AFILIADO 
	(NRO_AFILIADO,PLAN_MEDICO,ID_AFILIADO)
	SELECT ((NEXT VALUE FOR FLOPANICMA.AFILIADO_SEQ) + 1), ID_PLAN,
		   (SELECT ID_PERSONA FROM FLOPANICMA.PERSONA AS PERSTAB WHERE PERSTAB.NRO_DOCUMENTO=VARTAB.NRO_DOCUMENTO)
	FROM @MIGRA_AFILIADO_PLAN_MEDICO AS VARTAB;
	
	/*USUARIO AFILIADO (FUNCIONALIDADES CORRESPONDIENTES AL ROL AFILIADO)*/
	
	INSERT INTO FLOPANICMA.USUARIO
	(ID_PERSONA,USERNAME,PASSWORD)
	VALUES (4400,'AFIL1',FLOPANICMA.PASSWORD_HASH('ASDF'));
	
	INSERT INTO FLOPANICMA.USUARIO_ROL
	(ID_USUARIO,ID_ROL)
	VALUES ((SELECT ID_USUARIO FROM FLOPANICMA.USUARIO WHERE USERNAME = 'AFIL1'),3);
	
END;
GO

EXEC FLOPANICMA.Z_MIGRACION_AFILIADOS;
		
GO

/*MIGRAR PROFESIONALES*/

CREATE PROCEDURE FLOPANICMA.Z_MIGRACION_PROFESIONALES
AS
BEGIN
	
	DECLARE @MIGRA_PROFESIONAL TABLE
	(
		NOMBRE VARCHAR(255),
		APELLIDO VARCHAR(255),
		NRO_DOCUMENTO NUMERIC(18,0),
		DIRECCION VARCHAR(255),
		TELEFONO NUMERIC(18,0),
		E_MAIL VARCHAR(255),
		F_NACIMIENTO DATETIME
	);
	
	INSERT INTO @MIGRA_PROFESIONAL
	(NRO_DOCUMENTO,NOMBRE,APELLIDO,DIRECCION,TELEFONO,E_MAIL,F_NACIMIENTO)
	SELECT DISTINCT(MEDICO_DNI),MEDICO_NOMBRE,MEDICO_APELLIDO,MEDICO_DIRECCION,MEDICO_TELEFONO,MEDICO_MAIL,MEDICO_FECHA_NAC
	FROM GD_ESQUEMA.MAESTRA
	WHERE MEDICO_DNI IS NOT NULL;
	
	INSERT INTO FLOPANICMA.PERSONA
	(ID_PERSONA,NOMBRE,APELLIDO,DIRECCION,NRO_DOCUMENTO,TELEFONO,E_MAIL,F_NACIMIENTO)
	SELECT (NEXT VALUE FOR FLOPANICMA.PERSONA_SEQ), NOMBRE,APELLIDO,DIRECCION,NRO_DOCUMENTO,TELEFONO,E_MAIL,F_NACIMIENTO
	FROM @MIGRA_PROFESIONAL;
	
	INSERT INTO FLOPANICMA.PROFESIONAL
	(ID_PROFESIONAL,MATRICULA)
	SELECT (SELECT ID_PERSONA FROM FLOPANICMA.PERSONA AS PERSTAB WHERE PERSTAB.NRO_DOCUMENTO=VARTAB.NRO_DOCUMENTO),
			(NEXT VALUE FOR FLOPANICMA.MATRICULA_SEQ)
	FROM @MIGRA_PROFESIONAL AS VARTAB;
	
	/*USUARIO PROFESIONAL (FUNCIONALIDADES CORRESPONDIENTES AL ROL PROFESIONAL)*/
	
	INSERT INTO FLOPANICMA.USUARIO
	(ID_PERSONA,USERNAME,PASSWORD)
	VALUES (5555,'PROF1',FLOPANICMA.PASSWORD_HASH('ASDF'));
	
	INSERT INTO FLOPANICMA.USUARIO_ROL
	(ID_USUARIO,ID_ROL)
	VALUES ((SELECT ID_USUARIO FROM FLOPANICMA.USUARIO WHERE USERNAME = 'PROF1'),2);
	
END;

GO

EXEC FLOPANICMA.Z_MIGRACION_PROFESIONALES

GO

/*MIGRAR ESPECIALIDADES, TIPOS DE ESPECIALIDAD Y ESPECIALIDAD_PROFESIONAL*/

CREATE PROCEDURE FLOPANICMA.Z_MIGRACION_ESPECIALIDADES
AS
BEGIN
	DECLARE @MIGRA_ESPECIALIDADES TABLE
	(
		ID_ESPECIALIDAD NUMERIC(18,0),
		ESP_DETALLE VARCHAR(255),
		ID_TIPO_ESPECIALIDAD NUMERIC(18,0),
		TIPO_ESP_DETALLE VARCHAR(255)
	);
	
	INSERT INTO @MIGRA_ESPECIALIDADES
	(ID_ESPECIALIDAD,ESP_DETALLE,ID_TIPO_ESPECIALIDAD,TIPO_ESP_DETALLE)
	SELECT DISTINCT(ESPECIALIDAD_CODIGO),ESPECIALIDAD_DESCRIPCION,TIPO_ESPECIALIDAD_CODIGO,TIPO_ESPECIALIDAD_DESCRIPCION
	FROM GD_ESQUEMA.MAESTRA;

	INSERT INTO FLOPANICMA.TIPO_ESPECIALIDAD
	(ID_TIPO_ESPECIALIDAD,DETALLE)
	SELECT DISTINCT(ID_TIPO_ESPECIALIDAD),TIPO_ESP_DETALLE
	FROM @MIGRA_ESPECIALIDADES
	WHERE ID_TIPO_ESPECIALIDAD IS NOT NULL;
	
	INSERT INTO FLOPANICMA.ESPECIALIDAD
	(ID_ESPECIALIDAD,ID_TIPO_ESPECIALIDAD,DETALLE)
	SELECT DISTINCT(ID_ESPECIALIDAD),ID_TIPO_ESPECIALIDAD,ESP_DETALLE
	FROM @MIGRA_ESPECIALIDADES
	WHERE ID_ESPECIALIDAD IS NOT NULL;
	
	INSERT INTO FLOPANICMA.ESPECIALIDAD_PROFESIONAL
	(ID_PROFESIONAL,ID_ESPECIALIDAD)
	SELECT DISTINCT FLOPANICMA.PROFESIONAL.ID_PROFESIONAL,GD_ESQUEMA.MAESTRA.ESPECIALIDAD_CODIGO
	FROM FLOPANICMA.PERSONA JOIN
         FLOPANICMA.PROFESIONAL ON FLOPANICMA.PERSONA.ID_PERSONA = FLOPANICMA.PROFESIONAL.ID_PROFESIONAL JOIN
         GD_ESQUEMA.MAESTRA ON FLOPANICMA.PERSONA.NRO_DOCUMENTO = GD_ESQUEMA.MAESTRA.MEDICO_DNI;
END;

GO

EXEC FLOPANICMA.Z_MIGRACION_ESPECIALIDADES;

GO


/*MIGRAR CONSULTAS, BONOS Y COMPRA DE BONOS*/

CREATE PROCEDURE FLOPANICMA.Z_MIGRACION_CONSULTAS_BONOS
AS
BEGIN
	DECLARE @MIGRA_CONSULTAS TABLE
	(
		ID_AFILIADO INT,
		ID_PROFESIONAL INT,
		ID_ESPECIALIDAD NUMERIC(18,0),
		FECHA_TURNO DATETIME,
		NRO_TURNO NUMERIC(18,0),
		FECHA_COMPRA DATETIME,
		FECHA_IMPRESION DATETIME,
		BONO_NUMERO NUMERIC (18,0),
		SINTOMA VARCHAR (255),
		ENFERMEDAD VARCHAR (255)
	);

	DECLARE @CANTIDAD_CONSULTAS TABLE
	(
		AFILIADO NUMERIC (18,0),
		CANTIDAD INT
	);
	
	INSERT INTO @MIGRA_CONSULTAS
	(ID_AFILIADO,ID_PROFESIONAL,ID_ESPECIALIDAD,FECHA_TURNO,NRO_TURNO,FECHA_COMPRA,FECHA_IMPRESION,SINTOMA,ENFERMEDAD,BONO_NUMERO)
	SELECT (SELECT ID_PERSONA FROM FLOPANICMA.PERSONA AS PERTAB WHERE PERTAB.NRO_DOCUMENTO=GD_ESQUEMA.MAESTRA.PACIENTE_DNI),
	        (SELECT ID_PERSONA FROM FLOPANICMA.PERSONA AS PERTAB WHERE PERTAB.NRO_DOCUMENTO=GD_ESQUEMA.MAESTRA.MEDICO_DNI),
			ESPECIALIDAD_CODIGO,TURNO_FECHA,TURNO_NUMERO,COMPRA_BONO_FECHA,BONO_CONSULTA_FECHA_IMPRESION,
			CONSULTA_SINTOMAS,CONSULTA_ENFERMEDADES,BONO_CONSULTA_NUMERO 
	FROM GD_ESQUEMA.MAESTRA;
	
	INSERT INTO FLOPANICMA.PEDIDO_TURNO
	(ID_PEDIDO,FECHA,ID_PROFESIONAL,ID_AFILIADO,ID_ESPECIALIDAD)
	SELECT NRO_TURNO,FECHA_TURNO,ID_PROFESIONAL,ID_AFILIADO,ID_ESPECIALIDAD
	FROM @MIGRA_CONSULTAS
	WHERE (SINTOMA IS NULL AND FECHA_COMPRA IS NULL);
	
	INSERT INTO FLOPANICMA.CONSULTA
	(ID_PROFESIONAL,ID_AFILIADO,FECHA,SINTOMA,DIAGNOSTICO,ID_ESPECIALIDAD)
	SELECT ID_PROFESIONAL,ID_AFILIADO,FECHA_TURNO,SINTOMA,ENFERMEDAD,ID_ESPECIALIDAD
	FROM @MIGRA_CONSULTAS 
	WHERE (FECHA_COMPRA IS NULL AND FECHA_IMPRESION IS NOT NULL AND BONO_NUMERO IS NOT NULL);
	
	INSERT INTO FLOPANICMA.COMPRA_BONO
	(ID_AFILIADO,FECHA_COMPRA,FECHA_IMPRESION)
	SELECT AFI.ID_AFILIADO,MIGCON.FECHA_COMPRA,MIGCON.FECHA_IMPRESION
	FROM FLOPANICMA.AFILIADO AS AFI JOIN @MIGRA_CONSULTAS AS MIGCON ON AFI.ID_AFILIADO = MIGCON.ID_AFILIADO
	WHERE MIGCON.FECHA_TURNO IS NULL;
	
		
	INSERT INTO @CANTIDAD_CONSULTAS
	(AFILIADO,CANTIDAD)
	SELECT DISTINCT(ID_AFILIADO),COUNT(FECHA)
	FROM FLOPANICMA.CONSULTA
	GROUP BY (ID_AFILIADO);
	
	UPDATE FLOPANICMA.AFILIADO
	SET NRO_CONSULTA = (SELECT CANTIDAD FROM @CANTIDAD_CONSULTAS WHERE ID_AFILIADO = AFILIADO);
	
END;
GO

EXEC FLOPANICMA.Z_MIGRACION_CONSULTAS_BONOS

GO


/***********/
/* TRIGGERS */
/***********/
 --TRIGGER PARA INSERTAR, MODIFICAR Y ELIMINAR ACTIVIDAD DIA IMPACTE EN AGENDA PROFESIONAL 
				--PARA MANTENER ACTUALIZADO HORAS ACUMULADAS


/******************/
/* ABMs y Filtros */
/******************/

/*VALIDA EL USUARIO Y SU CONTRASEÃ‘A VERIFICANDO QUE SE HAYAN CARGADO LOS DATOS E INHABILITANDO
 AL USUARIO SI SUPERA LOS TRES INTENTOS ERRONEOS DE CONTRASEÃ‘A*/
CREATE PROCEDURE FLOPANICMA.LOGIN_USUARIO
@USERNAME VARCHAR(255),
@PASSWORD NVARCHAR(255),
@ID_USUARIO INT OUTPUT,
@ID_ERROR BIT OUTPUT,
@DESC_ERROR VARCHAR(255) OUTPUT

AS
BEGIN
	
	DECLARE @INTENTOS INT;
	DECLARE @HASH_PASS NVARCHAR(255);
	
	SET @ID_ERROR=0;
	SET @DESC_ERROR='';
	SET @ID_USUARIO=0;
	
	SET @USERNAME = FLOPANICMA.TRIM(UPPER(@USERNAME));
	
	IF (@USERNAME IS NULL OR @USERNAME='')
	BEGIN
		SET @ID_ERROR = 1;
		SET @DESC_ERROR = 'Debe ingresar un usuario';
		RETURN;
	END
	
	IF ((SELECT ID_USUARIO FROM FLOPANICMA.USUARIO AS USERTAB WHERE USERTAB.USERNAME = @USERNAME) IS NULL)
	BEGIN
		SET @ID_ERROR = 1;
		SET @DESC_ERROR = 'El usuario ingresado no existe';
		RETURN;
	END
	
	IF ((SELECT ACTIVO FROM FLOPANICMA.USUARIO AS USERTAB WHERE USERTAB.USERNAME=@USERNAME) = 0)
	BEGIN
		SET @ID_ERROR = 1;
		SET @DESC_ERROR = 'Este usuario se encuentra bloqueado. Contacte a un administrador';
		RETURN;
	END
	
	SET @HASH_PASS = FLOPANICMA.PASSWORD_HASH(@PASSWORD);
	
	IF ((SELECT PASSWORD FROM FLOPANICMA.USUARIO AS USERTAB WHERE USERTAB.USERNAME=@USERNAME)<>@HASH_PASS)
	  BEGIN
		  SET @ID_ERROR = 1;
		  SET @DESC_ERROR = 'La constraseÃ±a ingresada es incorrecta';
		
		  SELECT @INTENTOS = INTENTOS FROM FLOPANICMA.USUARIO AS USERTAB WHERE USERTAB.USERNAME=@USERNAME;
		  SET @INTENTOS = @INTENTOS +1;
		  
		  UPDATE FLOPANICMA.USUARIO
		  SET INTENTOS = @INTENTOS
		  WHERE USERNAME= @USERNAME;
	  END
	 ELSE
	  BEGIN
		    SELECT @ID_USUARIO = ID_USUARIO FROM FLOPANICMA.USUARIO AS USERTAB WHERE USERTAB.USERNAME=@USERNAME;

			UPDATE FLOPANICMA.USUARIO
			SET INTENTOS = 0
			WHERE USERNAME = @USERNAME;
			RETURN;
	  END
	
	IF (@INTENTOS = 3)
		BEGIN
			SET @DESC_ERROR = 'La contraseÃ±a ingresada es incorrecta. Usuario bloqueado';
			
			UPDATE FLOPANICMA.USUARIO
			SET ACTIVO = 0
			WHERE USERNAME=@USERNAME;
			RETURN;
		END
	
	RETURN;
END;

GO

/*ASIGNAR ROLES POR USUARIO*/

CREATE PROCEDURE FLOPANICMA.GET_ROLES_POR_USUARIO 
@USERNAME VARCHAR(255),
@ID_ERROR INT OUTPUT,
@DESC_ERROR VARCHAR(255) OUTPUT
AS
BEGIN
	DECLARE @CANTIDAD INT;

	SELECT @ID_ERROR = 0;
	SELECT @DESC_ERROR = '';

	SELECT @USERNAME = FLOPANICMA.TRIM(UPPER(@USERNAME));

	SELECT @CANTIDAD = COUNT(*) FROM FLOPANICMA.USUARIO
	WHERE USERNAME = @USERNAME;

	IF (@CANTIDAD IS NULL OR @CANTIDAD = 0)
	BEGIN
		SELECT @ID_ERROR = 1;
		SELECT @DESC_ERROR = 'El Usuario ingresado no existe.';
		RETURN;
	END	

	SELECT @CANTIDAD = COUNT(*) FROM FLOPANICMA.USUARIO_ROL UR, FLOPANICMA.USUARIO U
	WHERE U.ID_USUARIO = UR.ID_USUARIO
	AND U.USERNAME = @USERNAME;

	IF (@CANTIDAD IS NULL OR @CANTIDAD = 0)
	BEGIN
		SELECT @ID_ERROR = 1;
		SELECT @DESC_ERROR = 'El Usuario ingresado no tiene Roles asociados.';
		RETURN;
	END	

	SELECT R.ID_ROL, R.DESCRIPCION, R.ACTIVO 
	FROM FLOPANICMA.USUARIO_ROL UR, FLOPANICMA.USUARIO U, FLOPANICMA.ROL R
	WHERE U.ID_USUARIO = UR.ID_USUARIO
	AND R.ID_ROL = UR.ID_ROL
	AND U.USERNAME = @USERNAME;

END;
GO

